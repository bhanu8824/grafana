test_pod:
  image: bats/bats:v1.1.0
  pullPolicy: IfNotPresent

loki:
  enabled: false
  isDefault: true
  url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
  gateway:
    enabled: true
  image:
    tag: 2.9.4
  # read:
  # replicas: 2
  # write:
  #   replicas: 1
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: logging
            operator: In
            values:
            - grafana
  tolerations:
   - key: "logging"
     operator: "Equal"
     value: "grafana"
     effect: "NoSchedule"
  auth_enabled: false
  # storage:
  #   bucketNames:
  #     chunks: chunks
  #     ruler: ruler
  #     admin: admin
  #   type: azure
  #   azure:
  #     accountName: smartconxstgcontainerlog
  #     endpointSuffix: blob.core.windows.net
  #     requestTimeout: null
  #     useFederatedToken: false
  #     useManagedIdentity: false
  #     userAssignedId: 3343d0b1-08f4-43ee-bd12-aee63794aae7
  persistence:
    type: pvc
    enabled: true
    size: 200Gi
    storageClassName: blobstorage
    existingClaim: pvc-blob
  existingSecretForConfig: loki
  config:
    compactor:
      compaction_interval: 10m
      retention_enabled: true
      retention_delete_delay: 2h
      retention_delete_worker_count: 150
      shared_store: filesystem
      working_directory: /data/loki/boltdb-shipper-compactor
    limits_config:
      retention_period: 720h
      # retention_stream:
      # - selector: '{namespace="default"}'
      #   priority: 1
      #   period: 24h
      # - selector: '{container="retention-test"}'
      #   priority: 3
      #   period: 24h
      # - selector: '{namespace="kube-system"}'
      #   priority: 2
      #   period: 24h
      enforce_metric_name: false
      max_entries_limit_per_query: 500000
      reject_old_samples: true
      reject_old_samples_max_age: 168h
    # query_range:
    #   align_queries_with_step: true
    #   parallelise_shardable_queries: false
    server:
      log_level: "error"
    ruler:
      storage:
        type: local
        local:
          directory: /data/loki/rules
      rule_path: /tmp/loki/rules
      alertmanager_url: http://loki-prometheus-alertmanager:80
      enable_alertmanager_discovery: false
      ring:
        kvstore:
          store: inmemory
      enable_api: true
      enable_alertmanager_v2: true

  readinessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  livenessProbe:
    httpGet:
      path: /ready
      port: http-metrics
    initialDelaySeconds: 45
  datasource:
    jsonData: {}
    uid: ""

promtail:
  enabled: true
  config:
    logLevel: info
    serverPort: 3101
    clients:
      - url: http://loki-write-headless:3100/loki/api/v1/push
  tolerations:
   - key: "logging"
     operator: "Equal"
     value: "grafana"
     effect: "NoSchedule"
    # snippets:
    #   ScrapeConfigs: |
    #    - job_name: cronjob-exclude
    #      kubernetes_sd_configs:         
    #      - role: pod    
    #      relabel_configs:
    #      - source_labels: [__meta_kubernetes_pod_label_Job-name]
    #        action: drop
    #        regex: syndication
    #        target_label: namespaces

fluent-bit:
  enabled: false

grafana:
  enabled: true
  datasources:
     datasources.yaml:
       apiVersion: 1
       datasources:
       - name: loki
         type: loki
         isDefault: true
         access: proxy
         enabled: true
         url: http://loki-read:3100
         jsonData:
          timeout: 500
          # maxLines: 5000000
          httpHeaderName1: Connection
          httpHeaderName2: Upgrade
         secureJsonData:
          httpHeaderValue1: Upgrade
          httpHeaderValue2: websocket
          
  sidecar:
    datasources:
      label: ""
      labelValue: ""
      enabled: true
      # maxLines: 500000
  image:
    tag: 10.4.0
  # replicas: 2
  admin:
    existingSecret: azure-aad
    userKey: admin-user
    passwordKey: admin-password

  env:
    # GF_DEFAULT_APP_MODE: development
    GF_FEATURE_TOGGLES_ENABLE: logsInfiniteScrolling
    GF_SERVER_DOMAIN: icsstage.azurefd.net
    GF_SERVER_ROOT_URL: https://icsstage.azurefd.net/grafana/
    GF_SERVER_SERVE_FROM_SUB_PATH: true
  envValueFrom:
    GF_AUTH_AZUREAD_CLIENT_ID:
        secretKeyRef:
          name: azure-aad
          key: client_id
    GF_AUTH_AZUREAD_CLIENT_SECRET:
        secretKeyRef:
          name: azure-aad
          key: client_secret
         #GF_SECURITY_ADMIN_USER:
            #secretKeyRef:
            # key: admin-user
            #name: azure-aad
            #GF_SECURITY_ADMIN_PASSWORD:
            #secretKeyRef:
            #key: admin-password
            #name: azure-aad
  persistence:
    type: pvc
    enabled: true
    size: 8Gi
    storageClassName: grafana
    existingClaim: pvc-grafana

  extraConfigmapMounts:
    - name: customtemplate-volume
      mountPath: /usr/share/grafana/public/emails/ng_alert_notification.html
      subPath: ng_alert_notification.html
      configMap: customtemplate
  
  alerting:
     delete_rules.yaml:
       apiVersion: 1
       deleteRules: 
       - orgId: 1 
         uid: podfailure_id
       - orgId: 1
         uid: dummy_alertid
       - orgId: 1
         uid: dummy_alertid2  
       - orgId: 1
         uid: nodecpu_id        
         
     contact_points_test.yaml:
       apiVersion: 1
       contactPoints: 
       - orgId: 1
         name: helm_contact_points
         receivers:
         - uid: helm_mail_id
           type: email
           disableResolveMessage: true
           settings: 
             addresses: <>

  grafana.ini:
      # server: 
      #   domain: icsstage.azurefd.net
      #   root_url: https://icsstage.azurefd.net/grafana/
      #   serve_from_sub_path: true
      smtp:
        enabled: true
        host: smtp.office365.com:587
        user: cron@italentdigital.com
        password: PG73NujEhi8FOma
        skip_verify: true
        from_name: Grafana_STG_ICS
        from_address: cron@italentdigital.com
      alerting:
        enabled: true
      users:
        viewers_can_edit: true
      auth.azuread:
        name: Azure AD
        enabled: true
        allow_sign_up: true
        scopes: openid email profile
        auth_url: https://login.microsoftonline.com/e55fe08a-e4e3-4627-ad40-d9961c612aaa/oauth2/v2.0/authorize
        token_url: https://login.microsoftonline.com/e55fe08a-e4e3-4627-ad40-d9961c612aaa/oauth2/v2.0/token
        allow_assign_grafana_admin: false

  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchExpressions:
          - key: logging
            operator: In
            values:
            - grafana
  tolerations:
   - key: "logging"
     operator: "Equal"
     value: "grafana"
     effect: "NoSchedule"
  

prometheus:
  enabled: true
  isDefault: false
  url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
  datasource:
    jsonData: {}
  alertmanager:
    enabled: false
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: logging
              operator: In
              values:
              - grafana
    tolerations:
    - key: "logging"
      operator: "Equal"
      value: "grafana"
      effect: "NoSchedule" 
    persistentVolume:
      enabled: false
      size: 16Gi
      storageClass: grafana
      existingClaim: pvc-prometheus
  server:
    extraFlags:
    - enable-feature=memory-snapshot-on-shutdown
    # defaultFlagsOverride:
    # - --storage.tsdb.retention.time=2d
    # - --config.file=/etc/config/prometheus.yml
    # - --storage.tsdb.path=/data
    # - --web.console.libraries=/etc/prometheus/console_libraries
    # - --web.console.templates=/etc/prometheus/consoles
    # - --enable-feature=memory-snapshot-on-shutdown
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: logging
              operator: In
              values:
              - grafana
    tolerations:
    - key: "logging"
      operator: "Equal"
      value: "grafana"
      effect: "NoSchedule"
    persistentVolume:
      enabled: true
      size: 16Gi
      storageClass: grafana
      existingClaim: pvc-prometheus
    # resources: 
    #   requests:
    #      memory: 250Mi
  kube-state-metrics: 
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: logging
              operator: In
              values:
              - grafana
    tolerations:
    - key: "logging"
      operator: "Equal"
      value: "grafana"
      effect: "NoSchedule" 
  prometheus-pushgateway:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions: 
            - key: logging
              operator: In
              values:
              - grafana
    tolerations:
    - key: "logging"
      operator: "Equal"
      value: "grafana"
      effect: "NoSchedule"            
          
filebeat:
  enabled: false
  filebeatConfig:
    filebeat.yml: |
      # logging.level: debug
      filebeat.inputs:
      - type: container
        paths:
          - /var/log/containers/*.log
        processors:
        - add_kubernetes_metadata:
            host: ${NODE_NAME}
            matchers:
            - logs_path:
                logs_path: "/var/log/containers/"
      output.logstash:
        hosts: ["logstash-loki:5044"]

logstash:
  enabled: false
  image: grafana/logstash-output-loki
  imageTag: 1.0.1
  filters:
    main: |-
      filter {
        if [kubernetes] {
          mutate {
            add_field => {
              "container_name" => "%{[kubernetes][container][name]}"
              "namespace" => "%{[kubernetes][namespace]}"
              "pod" => "%{[kubernetes][pod][name]}"
            }
            replace => { "host" => "%{[kubernetes][node][name]}"}
          }
        }
        mutate {
          remove_field => ["tags"]
        }
      }
  outputs:
    main: |-
      output {
        loki {
          url => "http://loki:3100/loki/api/v1/push"
          #username => "test"
          #password => "test"
        }
        # stdout { codec => rubydebug }
      }

# proxy is currently only used by loki test pod
# Note: If http_proxy/https_proxy are set, then no_proxy should include the
# loki service name, so that tests are able to communicate with the loki
# service.
proxy:
  http_proxy: ""
  https_proxy: ""
  no_proxy: ""


